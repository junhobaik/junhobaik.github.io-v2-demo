{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/mongodb-basic-crud/","result":{"data":{"site":{"siteMetadata":{"title":"Dev.White","author":"Junho Baik"}},"markdownRemark":{"id":"ba85648d-c533-5903-a51e-2b34d88be622","html":"<p>MongoDB 문서를 참고해,\nCheatSheet 개념으로 정리해본 기초 Mongo Shell CRUD 명령어.</p>\n<p>이 포스트에서는 기초적인 것만 다루며 <code class=\"language-text\">writeConcern</code> Option, Evaluation Query 등은 다루지 않습니다.</p>\n<h2>Database</h2>\n<h3>Database 목록</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> show databases</code></pre>\n      </div>\n<h3>Database 선택</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> use db_name</code></pre>\n      </div>\n<blockquote>\n<p>존재하지 않는 DB 선택 시, 이후 DB 삽입등이 이루어지면 자동으로 생성된다.</p>\n</blockquote>\n<h3>Database 제거</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.dropDatabase<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>현재 선택되어있는 Database를 제거한다.</p>\n</blockquote>\n<h2>Collection</h2>\n<h3>Collection 생성</h3>\n<p><a href=\"https://docs.mongodb.com/manual/reference/method/db.createCollection/index.html\"><code class=\"language-text\">db.createCollection(name, [options])</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.createCollection<span class=\"token punctuation\">(</span>collection_name<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>일반적으로 insert시 지정한 collection이 없는 콜렉션이면 자동으로 생성되므로 따로 Collection을 생성할 필요는 없지만 options를 활용하기 위해서는 createCollection을 사용한다.</p>\n</blockquote>\n<h3>Collection 제거</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.collection_name.drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>Collection 이름 변경</h3>\n<p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.renameCollection/\"><code class=\"language-text\">db.collection.renameCollection(target, [dropTarget])</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.rrecord.renameCollection<span class=\"token punctuation\">(</span><span class=\"token string\">\"record\"</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h2>Insert</h2>\n<h3>하나의 Document 삽입</h3>\n<p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.insertOne/#db.collection.insertOne\"><code class=\"language-text\">db.collection.insertOne(document, [options])</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.collection_name.insertOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Jhon\"</span>, age: <span class=\"token number\">24</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>여러 Document 삽입</h3>\n<p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.insertMany/#db.collection.insertMany\"><code class=\"language-text\">db.collection.insertMany(Array of documents, [options])</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.collection_name.insertMany<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Jhon\"</span>, age: <span class=\"token number\">24</span> <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Darcy\"</span>, age: <span class=\"token number\">26</span> <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Ted\"</span>, age: <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p><strong>ordered</strong>: (boolean/default:true) Document를 기술한 순서대로 삽입</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.collection_name.insertMany<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Jhon\"</span>, age: <span class=\"token number\">24</span> <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Darcy\"</span>, age: <span class=\"token number\">26</span> <span class=\"token punctuation\">}</span>,\n    <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Ted\"</span>, age: <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>,\n  <span class=\"token punctuation\">{</span> ordered: <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h2>Query (find)</h2>\n<p>user Collection의 모든 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p><strong>pretty()</strong>: 결과를 읽기 좋은 형식으로 보여줌</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.pretty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>Collection에서 name 필드의 값이 ‘Jhon’인 Dcoument 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Jhon\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3><a href=\"https://docs.mongodb.com/manual/reference/operator/query-comparison/#query-selectors-comparison\">비교 연산자</a></h3>\n<ul>\n<li>$eq: 지정한 값과 같은</li>\n<li>$gt: 지정한 값보다 큰</li>\n<li>$gte: 지정한 값보다 크거나 같은</li>\n<li>$in: 지정한 배열 안에 속하는</li>\n<li>$lt: 지정한 값보다 작은</li>\n<li>$lte: 지정한 값보다 작거나 같은</li>\n<li>$ne: 지정한 값과 같지 않은</li>\n<li>$nin: 지정한 배열 안에 속하지 않는</li>\n</ul>\n<p>Collection에서 level 필드의 값이 3이상인 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.user.find<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    level: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$gte</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>Collection에서 level 필드의 값이 2 또는 5 인 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.find<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    level: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$in</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>, <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>논리 연산자</h3>\n<ul>\n<li>$or</li>\n<li>$and</li>\n<li>$not : 지정 조건이 false면 true, true이면 false</li>\n<li>$nor : 모든 지정 조건이 false면 true</li>\n</ul>\n<p>Collection에서 status가 ‘A’이고 qty가 30 이상인 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.inventory.find<span class=\"token punctuation\">(</span> \n  <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$and</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> status: <span class=\"token string\">\"A\"</span> <span class=\"token punctuation\">}</span>,\n      <span class=\"token punctuation\">{</span> qty: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">></span> db.inventory.find<span class=\"token punctuation\">(</span> \n  <span class=\"token punctuation\">{</span> \n    status: <span class=\"token string\">\"A\"</span>, \n    qty: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span> \n  <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>위의 두 명령은 동일한 명령이라 할 수 있다.</p>\n</blockquote>\n<p>Collection에서 status가 ‘A’이거나 qty가 30 이상인 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$or</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> status: <span class=\"token string\">\"A\"</span> <span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span> qty: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>$and와 $or의 혼합 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span>\n     status: <span class=\"token string\">\"A\"</span>,\n     <span class=\"token variable\">$or</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> qty: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span> item: /^p/ <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>Match an Embedded/Nested Document</h3>\n<p><code class=\"language-text\">comments: { author: &quot;Jhon&quot;, comment: &quot;Good!&quot; }</code>를 완전히 일치 시킨 선택 명령</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.users.find<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> comments: <span class=\"token punctuation\">{</span> author: <span class=\"token string\">\"Jhon\"</span>, comment: <span class=\"token string\">\"Good!\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>comments: { comment: \"Good!\" , author: \"Jhon\", } 를 선택할 시 순서가 달라 정확히 일치하지 않기 때문에 결과가 나오지 않습니다.</p>\n</blockquote>\n<h3>Query on Nested Field</h3>\n<p><code class=\"language-text\">{ size: { w: 20, h: 40 } }</code>와 같은 형식의 Document들이 있을 때 size 필드 안의 h 가 15 이상인 도큐먼트 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"size.h\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">15</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>Query an Array</h3>\n<h4>Match an Array</h4>\n<p>tags가 <code class=\"language-text\">[&quot;red&quot;, &quot;blank&quot;]</code>로 요소와 순서 모두가 정확히 일치하는 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> tags: <span class=\"token punctuation\">[</span><span class=\"token string\">\"red\"</span>, <span class=\"token string\">\"blank\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>tag안에 red가 있는 document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> tags: <span class=\"token string\">\"red\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h4>$all</h4>\n<p>tags가 ‘red’, ‘blank’ 두가지를 가지고 있는 Dcouments</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> tags: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$all</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"red\"</span>, <span class=\"token string\">\"blank\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>순서와 상관없고, 정확히 일치하는게 아닌 포함하고 있으면 된다.</p>\n</blockquote>\n<h4>$elemMatch</h4>\n<p><code class=\"language-text\">dim_cm: [12, 16]</code>와 같은 형식이 있다.\n<code class=\"language-text\">dim_cm</code> 배열 안에 22초과, 30미만의 값을 포함하고 있는 Document를 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> dim_cm: <span class=\"token punctuation\">{</span> <span class=\"token variable\">$elemMatch</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$gt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">22</span>, <span class=\"token variable\">$lt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h4>Query for an Element by the Array Index Position</h4>\n<p><code class=\"language-text\">dim_cm</code> 배열의 1번째 index 요소가 25 초과인 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"dim_cm.1\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$gt</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h4>Query an Array by Array Length</h4>\n<p>tags 배열의 길이가 3인 Document 선택</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"tags\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$size</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>Query for Null or Missing Fields</h3>\n<p><code class=\"language-text\">{ _id: 1, item: null }, { _id: 2 }</code> 두개의 Document가 있다.\n아래는 item이 null인 document를 선택한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> item: null <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>{ <em>id: 2 }도 item:null 이기 떄문에 두개의 Document가 모두 선택된다.</em>\n아래와 같이 하면 첫번째 document만 정상적으로 선택할 수 있다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> item <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$type</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p><a href=\"https://docs.mongodb.com/manual/reference/bson-types/\">BSON types</a>\nitem이 존재하지 않는 Document를 선택한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.find<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> item <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$exists</span><span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h2>Update</h2>\n<h3><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.updateOne/#db.collection.updateOne\">db.collection.updateOne(filter, update, options)</a></h3>\n<p><code class=\"language-text\">{ name: &quot;Jhon&quot;, age: 29 }</code>에서 age를 25로 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.user.updateOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> name: <span class=\"token string\">\"Jhon\"</span> <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span> <span class=\"token variable\">$set</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> age: <span class=\"token number\">25</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>options의 upsert 속성을 사용하면 만약 Kay가 존재하지 않을 시 Document를 새로 만들며 업데이트 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.updateOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Kay\"</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span> <span class=\"token variable\">$set</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span> age: <span class=\"token number\">25</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span>upsert: true<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>배열 field에 값 추가하기 (<code class=\"language-text\">skills: []</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.updateOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Jhon\"</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span><span class=\"token variable\">$push</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>skills: <span class=\"token string\">'react'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>배열 field에 값 추가하기 + 정렬</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 여러개 추가 시 $each 사용</span>\n<span class=\"token comment\"># 알파벳순으로 정렬시 $sort 사용</span>\n\n<span class=\"token operator\">></span> db.user.updateOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Jhon\"</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span><span class=\"token variable\">$push</span><span class=\"token builtin class-name\">:</span> \n    skills: <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$each</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'vue'</span>, <span class=\"token string\">'angular'</span><span class=\"token punctuation\">]</span>,\n      <span class=\"token variable\">$sort</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>배열 field에 값 제거하기</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.updateOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Jhon\"</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span><span class=\"token variable\">$pull</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>skills: <span class=\"token string\">'react'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>배열 field에서 여러값 제거하기</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.updateOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Jhon\"</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span><span class=\"token variable\">$pull</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>skills: <span class=\"token variable\">$in</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'angular'</span>, <span class=\"token string\">'vue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.updateMany/#db.collection.updateMany\">db.collection.updateMany(filter, update, options)</a></h3>\n<p>level이 3이상인 document의 admin을 true로 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.user.updateMany<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> level: <span class=\"token punctuation\">{</span><span class=\"token variable\">$gte</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span> <span class=\"token variable\">$set</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>admin: true<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.replaceOne/#db.collection.replaceOne\">db.collection.replaceOne(filter, replacement, options)</a></h3>\n<p>name:”Kay”인 Document를 <code class=\"language-text\">{name:&quot;Kai&quot;, age: 21}</code>로 교체한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.replaceOne<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Kay\"</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Kai\"</span>, age: <span class=\"token number\">21</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>교체, 업데이트 후에도 도큐먼트의 ID는 유지된다.</p>\n</blockquote>\n<h3><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.update/#db.collection.update\">db.collection.update(query, update, options)</a></h3>\n<p>documnet를 replace 하기</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 이름이 Jhon인 도큐먼트를 name Jun, age 21으로 교체</span>\n\n<span class=\"token operator\">></span> db.user.update<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>name:<span class=\"token string\">\"Jhon\"</span><span class=\"token punctuation\">}</span>, <span class=\"token punctuation\">{</span>name: <span class=\"token string\">\"Jun\"</span>, age: <span class=\"token number\">21</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>여러 Document Update, options의 multi 속성이 필요하다, 또는 insertMany를 사용하는 방법도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> db.user.update<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>level: <span class=\"token punctuation\">{</span><span class=\"token variable\">$lte</span>:3<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span><span class=\"token variable\">$set</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>admin: false<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span>multi: true<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h2>Delete</h2>\n<p>inventory Collection안의 모든 Document가 삭제된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.deleteMany<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>Collection안의 status가 A인 Dcoument가 모두 삭제된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.deleteMany<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> status <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"A\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>Collection안의 status가 D인 Dcoument가 하나 삭제된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">db.inventory.deleteOne<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> status: <span class=\"token string\">\"D\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<hr>\n<p>References</p>\n<ul>\n<li><a href=\"https://docs.mongodb.com/manual/\">MongoDB | Documentation</a></li>\n</ul>","excerpt":"MongoDB 문서를 참고해,\nCheatSheet 개념으로 정리해본 기초 Mongo Shell CRUD 명령어. 이 포스트에서는 기초적인 것만 다루며  Option, Evaluation Query 등은 다루지 않습니다. Database Database…","frontmatter":{"title":"MongoDB 기초, CRUD 명령어","date":"2019-07-30","tags":["mongodb"],"keywords":["몽고디비 명령어","몽고 명령어","mongodb 명령어","mongodb 사용법","mongodb insert","mongodb update","mongodb delete","mongodb query","몽고디비 사용법","mongodb crud"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/mongodb-basic-crud/","previous":{"fields":{"slug":"/mac-terminal-setting/"},"frontmatter":{"title":"mac 터미널 환경 구성하기 (zsh, oh my zsh, zplug, hyper)","tags":["mac"],"published":true}},"next":{"fields":{"slug":"/nvm-install/"},"frontmatter":{"title":"NVM, Node 설치 및 관리하기","tags":["node","javascript"],"published":true}}}}}