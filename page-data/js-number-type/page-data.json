{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/js-number-type/","result":{"data":{"site":{"siteMetadata":{"title":"Dev.White","author":"Junho Baik"}},"markdownRemark":{"id":"d4e9dae1-01a9-5d45-ac16-3d6ce3a60679","html":"<p>Javascript는 Java와 달리 int, double 같은 숫자 타입이 나눠져있지 않다.<br>\nnumber 하나로 정수(Integer)와 부동 소수점 수를 모두 표현한다.</p>\n<h3>숫자 리터럴</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token comment\">//12</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">12.</span> <span class=\"token comment\">//12</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">12.0</span> <span class=\"token comment\">//12</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">12.300</span> <span class=\"token comment\">//12.3</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">0.12</span> <span class=\"token comment\">//0.12</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">.12</span> <span class=\"token comment\">//0.12</span></code></pre>\n      </div>\n<p>.12, 12. 과 같은 방식은 틀린 것은 아니더라도 좋은 코드라고 하긴 어려울 것이다.</p>\n<h3>Number Methods</h3>\n<h4>- Number.isInteger()</h4>\n<p>정수인지 확인할 수 있는 메서드.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">.12</span><span class=\"token punctuation\">;</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre>\n      </div>\n<h4>- Number.isSafeInteger()   <strong>/*ES6*/</strong></h4>\n<p>안전한 정수값인 <code class=\"language-text\">-(253 - 1)</code> 부터 <code class=\"language-text\">253 - 1</code> 사이의 정수 값인지 확인하는 메서드, ES6에서 출현하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">Number<span class=\"token punctuation\">.</span><span class=\"token function\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// true</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isSafeInteger</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// false</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isSafeInteger</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// true</span></code></pre>\n      </div>\n<h4>- Number.toFixed()</h4>\n<p>인자로 넘긴 수 만큼의 소수점 이하를 반올림하여 문자열 형태로 반환하는 메서드.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">12.39</span><span class=\"token punctuation\">;</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"12\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"12.4\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"12.39\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"12.390\"</span></code></pre>\n      </div>\n<h4>- Number.toPrecision()</h4>\n<p>수의 길이를 제한하여 문자열로 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">12.39</span><span class=\"token punctuation\">;</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"12.39\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"1e+1\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"12\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"12.4\"</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"12.39\"</span></code></pre>\n      </div>\n<h4>- Number.toExponential()</h4>\n<p>수를 지수표현식 문자열으로 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">10000000000</span><span class=\"token punctuation\">;</span>\nn<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10000000000</span>\nn<span class=\"token punctuation\">.</span><span class=\"token function\">toExponential</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//\"1e+10\"</span></code></pre>\n      </div>\n<hr>\n<h3>0.5 === 0.2 + 0.3 // false ??</h3>\n<p>Java나 타 언어를 배워봤다면 한번은 봤을만한 질문이다. </p>\n<p>0.5와 같은 부동 소수점 수는 결국 프로그래밍 언어에서는 0.5000000001과 같이 0.5와 가까운 수이기 때문이라는 것인데...</p>\n<p>Javascript에서는 어떨까?</p>\n<p>아래는 크롬 브라우저(2017.10 최신버전)의 콘솔창 결과이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">0.0000005</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.0000002</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.0000003</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token number\">0.000005</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.000002</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.000003</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">false</span>\n<span class=\"token number\">0.00005</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.00002</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.00003</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token number\">0.0005</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.0002</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.0003</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token number\">0.005</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.002</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.003</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token number\">0.05</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.02</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.03</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token number\">0.5</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n<span class=\"token boolean\">true</span>\n\n<span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.3</span>\n<span class=\"token boolean\">false</span>\n\n<span class=\"token number\">1.2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> \n<span class=\"token number\">0.19999999999999996</span>\n<span class=\"token number\">1.5</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span>\n<span class=\"token number\">1</span></code></pre>\n      </div>\n<p>모두 true 이길 바라지만 결과는 그렇지 않다. 더 어려운 것은 모두 false도 아니라는 것이다.</p>\n<p>어떤 것은 true이고 어떤 것은 false인 이러한 이유는 아직까지 정확하게 찾지 못했지만 부동 소수점 수의 계산에 있어 조심해야한다는 것을 알 수 있다.</p>\n<h5>해결 방법</h5>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token number\">1.2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 0.2</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1.1000001</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 0.1000001</span></code></pre>\n      </div>\n<p>Number의 메서드를 사용하여 위와 같은 방법으로 해결하는 방법도 있다.</p>","excerpt":"Javascript는 Java와 달리 int, double 같은 숫자 타입이 나눠져있지 않다. number 하나로 정수(Integer)와 부동 소수점 수를 모두 표현한다. 숫자 리터럴 .12, 1…","frontmatter":{"title":"자바스크립트의 숫자 타입(Number Type)","date":"2017-10-16","tags":["javascript"],"keywords":["Dev.White"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/js-number-type/","previous":{"fields":{"slug":"/js-es6-set-map/"},"frontmatter":{"title":"자바스크립트 ES6 Set, WeakSet / Map, WeakMap","tags":["javascript","ES6"],"published":true}},"next":{"fields":{"slug":"/js-semicolon-asi/"},"frontmatter":{"title":"자바스크립트에서 세미콜론(;)을 안써도 될까?","tags":["javascript"],"published":true}}}}}