{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/vuejs-install/","result":{"data":{"site":{"siteMetadata":{"title":"Dev.White","author":"Junho Baik"}},"markdownRemark":{"id":"ce17ff59-1aa9-5c2d-8d1e-8c3dea39e416","html":"<h2>Vue.JS 설치</h2>\n<h3>CDN으로 설치하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/vue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>간단히 index.html 내에 위 코드를 추가하는 것만으로 vue를 간단하게 사용할 수 있다.<br>\n다만 CDN을 기반으로 Vue를 개발하려면 .vue 확장자를 이용하는 개발은 할 수 없어 싱글 파일 컴포넌트 개발이 불가능하고 개발에 제약이 따른다.<br>\n제대로 된 vue 개발을 위해서는 아래의 방법을 시도하자.</p>\n<h3>NPM으로 설치하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 최신 stable 버전</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> vue</code></pre>\n      </div>\n<p>프로젝트 내에 vue를 설치하여 사용할 수 있다. Webpack 등 각종 번들러와도 잘 작동한다.<br>\n허나 더 편리하게 초기 세팅을 하고 싶다면 아래의 Vue CLI를 사용하는 방법이 최선일 것이다.</p>\n<h2>개발 도구 설치</h2>\n<h3>Vue CLI</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># vue-cli 설치</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --global vue-cli\n\n<span class=\"token comment\"># vue init &lt;template-name> &lt;project-name></span>\n<span class=\"token comment\"># \"webpack\" 템플릿을 이용해서 새 프로젝트 생성</span>\n$ vue init webpack my-project\n\n$ <span class=\"token builtin class-name\">cd</span> my-project\n<span class=\"token comment\"># 의존성 설치</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n<span class=\"token comment\"># 개발 서버 실행</span>\n$ <span class=\"token function\">npm</span> run dev</code></pre>\n      </div>\n<p>이렇게 하면 react의 create-react-app과 같이 webpack 환경의 프로젝트 구조가 자동 생성되며 이제 이것을 기본으로 개발을 시작하면 된다.</p>\n<h3>Vue DevTools</h3>\n<p>React와 유사하게 크롬 개발 도구에서 사용할 수 있는 개발툴을 지원한다.</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\">크롬 확장 프로그램 설치</a></p>\n<hr>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://kr.vuejs.org\">https://kr.vuejs.org</a></li>\n</ul>","excerpt":"Vue.JS 설치 CDN으로 설치하기 간단히 index.html 내에 위 코드를 추가하는 것만으로 vue를 간단하게 사용할 수 있다. 다만 CDN을 기반으로 Vue를 개발하려면 .vue…","frontmatter":{"title":"Vue.JS 및 Vue 개발 도구 설치하기","date":"2018-02-21","tags":["vue","javascript"],"keywords":["Dev.White"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/vuejs-install/","previous":{"fields":{"slug":"/mac-symbolic-link/"},"frontmatter":{"title":"MacOS, 심볼릭 링크 사용하기","tags":["Empty Tag"],"published":true}},"next":{"fields":{"slug":"/parcel-start/"},"frontmatter":{"title":"웹팩 대신 파셀(Parcel) 사용해보기 with React, Babel, SASS","tags":["parcel","react","sass","babel"],"published":true}}}}}