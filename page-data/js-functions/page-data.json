{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/js-functions/","result":{"data":{"site":{"siteMetadata":{"title":"Dev.White","author":"Junho Baik"}},"markdownRemark":{"id":"1446a896-335b-5980-89fc-083acd54732d","html":"<p>자바스크립트에서 함수선언문과 함수표현식의 차이점을 인식해두는 것은 중요한 점이다.\n큰 차이점이라 하면 호이스팅(Hoisting)이라고 할 수 있다.</p>\n<p>우선 함수선언문과 같은 경우를 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">functionDeclaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">functionDeclaration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'functionDeclaration'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'functionDeclaration'</span></code></pre>\n      </div>\n<p>함수 선언문의 경우에는 호이스팅에 의해 함수 전체가 호이스팅의 대상이 된다.\n따라서 작성한 코드에서 함수 선언문 보다 위에 함수 호출이 있더라도 정상적으로 호출이 된다.</p>\n<p>다음으로 함수표현식의 경우를 살펴보자</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">unnamedFunctionExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">unnamedFunctionExpression</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'unnamedFunctionExpression'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">Uncaught TypeError: unnamedFunctionExpression is not a function</code></pre>\n      </div>\n<p>결과는 unnamedFunctionExpression 변수가 함수가 아니라는 오류가 뜨게 된다.\n변수 선언 자체는 호이스팅되었지만 할당은 호이스팅의 대상이 아니므로 할당된 값이 없는 변수를 함수라 여기고 함수 호출을 한 샘이니 이러한 오류가 발생한 것이다.</p>\n<p>즉, 함수 선언문과 함수 표현식의 차이는 호이스팅 여부를 가름짓는 <strong>할당</strong>에 있다고 할 수 있다.</p>\n<p>함수선언문을 사용해서 나타날 수 있는 문제점을 아래 코드에 나타냈다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>위의 코드는 a A 를 원하지만 A A가 나오게 된 문제가 생긴 코드 라인이 방대한 프로젝트의 경우 위와같은 커뮤니케이션 오류에 따라 원하는 함수의 결과를 얻지 못할 수 있다.</p>\n<p>이러한 점들을 종합해 함수선언문의 사용보다는 함수표현식의 사용이 권장된다.<br>\n유명한 더글라스 크락포드 그리고 Airbnb의 Code Convension에서도 함수표현식을 권장하고 있다.</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"http://blog.sonim1.com/142\">KENDRICK'S BLOG</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/function-expressions-vs-declarations/#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%8B%9D---function-declarations\">CAPTAIN PANGYO</a></li>\n</ul>","excerpt":"자바스크립트에서 함수선언문과 함수표현식의 차이점을 인식해두는 것은 중요한 점이다.\n큰 차이점이라 하면 호이스팅(Hoisting…","frontmatter":{"title":"Javascript 함수선언문과 함수표현식","date":"2018-01-02","tags":["javascript"],"keywords":["Dev.White"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/js-functions/","previous":{"fields":{"slug":"/git-alias/"},"frontmatter":{"title":"Git, Alias(별칭)를 이용하여 편리하게 명령어 사용하기","tags":["git"],"published":true}},"next":{"fields":{"slug":"/start-jekyll-blog/"},"frontmatter":{"title":"Jekyll 블로그 시작하기 (MacOS, GitHub Page)","tags":["jekyll","blog","ruby"],"published":true}}}}}